{
    "version": "https://jsonfeed.org/version/1",
    "title": "Madsky",
    "description": "",
    "home_page_url": "https://madsky.github.io",
    "feed_url": "https://madsky.github.io/feed.json",
    "user_comment": "",
    "author": {
        "name": "Leigh"
    },
    "items": [
        {
            "id": "https://madsky.github.io/my-job-is-context-switching.html",
            "url": "https://madsky.github.io/my-job-is-context-switching.html",
            "title": "&quot;My job is context switching&quot;",
            "summary": "Context switching - jumping between multiple tasks - is one of the things that I seek to protect my teams from. It is pretty commonly derided as a \"productivity killer\" and having been in various jobs that have demanded it I can attest to the&hellip;",
            "content_html": "<p>Context switching - jumping between multiple tasks - is one of the things that I seek to protect my teams from. It is pretty commonly derided as a \"productivity killer\" and having been in various jobs that have demanded it I can attest to the effort that it requires to maintain for too long. And how close to the dreaded \"burn out\" you can get with it.</p>\n<p>But I've recently discovered that my job as a leader is actually all about context switching. And yet I don't feel dangerously close to burning out. What gives?</p>\n<p>I think the difference is the level of detail that we need to engage at. As an architect I was necessarily down in the detail. My job was to understand the detail of what was happening so that I could come up with viable designs, identify key risks, and enable informed decision-making.</p>\n<p>Context switching in detail comes with a huge overhead of having to get back into the detail of each new task. None of it is cursory - it's all detail work. And that process of getting back into the detail is the bit that I think constitutes the \"overhead\". I can't do the work until the overhead is covered - which takes time. So if I have to switch contexts too ofthen then all I'm doing is processing overhead and never making real progress.</p>\n<p>Now though, in my role as a leader, I've had to accept due to the scale of what my teams are involved in, being over all the detail is impossible. This was a difficult adjustment but probably a whole other blog post for another day. So, lacking that detail my need to process the overhead is a function of how well my teams are operating. I don't need the detail because I know that I've got good people who do have it. And one of the key skills that my teams need is being able to summarise their positions when they need support.</p>\n<p>I've switched out detail for context.</p>\n<p>And I think that's what makes the difference to why context switching isn't problematic and is, in fact, my job.</p>\n<p>Provided I've got people that I know are dealing with the detail. And provided I know that they can summarise to me their requirements and situations. And provided that I'm sufficiently aware of the moving parts, I can forgo the detail and context switch without burden.</p>",
            "author": {
                "name": "Leigh"
            },
            "tags": [
                   "leadership",
                   "Work"
            ],
            "date_published": "2022-11-25T22:31:54+00:00",
            "date_modified": "2022-11-25T22:31:54+00:00"
        },
        {
            "id": "https://madsky.github.io/flexible-working-is-quite-hard.html",
            "url": "https://madsky.github.io/flexible-working-is-quite-hard.html",
            "title": "Flexible Working is Quite Hard",
            "summary": "I love working from home. My commute is lovely. The coffee is consistently excellent and works out at about 17p per cup. My monitor is huge. The guy making my lunch is quite lazy which often results in my eating crisp butties, but I think&hellip;",
            "content_html": "<p>I love working from home. My commute is lovely. The coffee is consistently excellent and works out at about 17p per cup. My monitor is huge. The guy making my lunch is quite lazy which often results in my eating crisp butties, but I think he's distracted with another job so I try to go easy on him.</p>\n<p>The office is far away. Coffee, although subsidised (and pretty decent) is a bit pricier than 17p a cup, and to be honest the monitor situation is a bit hit and miss, despite the heavy investment in a lovely new building. But there is a Juici Sushi and the GLC just round the corner and I don't even think they serve crisp butties.</p>\n<p>I'm lucky that my company have been employee-focused over the past couple of horrific years and they've been incredibly protective of us and shown a huge amount of flexibility.</p>\n<p>I remember our CEO talking early into the COVID nonsense about how he was certain that we needed to be in the office as this was our \"secret sauce\" but then as this looked less and less feasible, we pivoted and adopted a home-first strategy.</p>\n<p>An accident of timing meant that we were leaving a brand-new office basically empty for the most part, but everyone understood that it was the right choice for the time.</p>\n<p>As we've emerged from the worst of COVID there's been a slow return to the office - again on very flexible terms, but it's fair to say that I don't think the uptake has been huge.</p>\n<p>I'm guilty of taking the easy commute option too often. But equally I've been stung a few times when I've arranged to meet people and it has been cancelled at the last minute. My commute isn't cheap (in money or time-elapsed) but is usually worth it to get to spend some real face time with people. It's less beneficial for me to travel the 90 minutes to the office to spend 8 hours on Zoom calls whilst sat alone, and then commute home.</p>\n<p>And herein lies the difficulty - giving people flexibility seems like the obvious and right choice, but the difficultly comes when you're trying to co-ordinate getting groups and teams together. When everyone is flexible then it's hard to make and stick to firm plans.</p>\n<p>There are clear benefits from being together face to face. I wouldn't like to have planned a few of our recent projects entirely remotely, nor would having 'Zoom Beers' have been as intangibly beneficial as sitting outside a pub near the train station in the sun putting the world to rights whilst waiting for the train. </p>\n<p>So what is the answer? Everyone back in the office? Hope that technology somehow continues to improve remote working to the point that it is really like being in each other's company?</p>\n<p>I don't know. </p>\n<p>I'd like to spend time with my teams more often. I'd like to have more team meetings in a real room together. I'd like to solve minor problems over a coffee (or whilst waiting for a coffee) instead of in a Zoom meeting (in mandatory 30 minute increments). I'd like to catch someone whilst passing their desk and realise something obvious that had previously evaded me. Maybe this is what was meant by \"secret sauce\".</p>\n<p>But I also like my home commute, coffee, and crisp-butties. And I love having my dog with me too.</p>\n<p>I don't know. It's quite hard. But it feels like something has to change.</p>",
            "image": "https://madsky.github.io/media/posts/3/IMG_0490.jpeg",
            "author": {
                "name": "Leigh"
            },
            "tags": [
                   "Work",
                   "Life"
            ],
            "date_published": "2022-07-14T18:54:31+01:00",
            "date_modified": "2022-07-14T18:58:45+01:00"
        },
        {
            "id": "https://madsky.github.io/being-right-is-just-the-beginning.html",
            "url": "https://madsky.github.io/being-right-is-just-the-beginning.html",
            "title": "Being Right Is Just The Beginning",
            "summary": "On the 8th September I was very grateful to have the opportunity to speak at my local (to my work) security/hacker conference DC151 in Leeds. In the talk I lamented my lack of drive in pursuing purely technical content anymore (there's plenty of that in&hellip;",
            "content_html": "<p>On the 8th September I was very grateful to have the opportunity to speak at my local (to my work) security/hacker conference DC151 in Leeds.<br><br>In the talk I lamented my lack of drive in pursuing purely technical content anymore (there's plenty of that in my old blog, linked in my bio) instead reflecting my current career arc and giving a talk on \"boring management stuff\", as I prefaced.<br><br>Of course, I don't think it's boring or particularly constrained to management stuff, but that was the first layer of my subterfuge and was reflected by in the organiser's comment that DC151 hadn't seen a talk like this before.<br><br>Nice.<br><br>So anyway, this is a brief outline of my talk. Well, of my point, really, Which is actually pretty simple, all told.<br><br>The most succint summary of what I was saying has since come from the co-organiser of DC151, Glenn:<br><br>\"<a href=\"https://twitter.com/GlennPegden/status/1437063162432524290?s=20\" target=\"_blank\" rel=\"noopener noreferrer\">We need to stop being the smartest in the room and start being the most helpful in the room</a>.\"<br><br>And that really is the main point that I wanted to get across.<br><br>As an industry we're obsessed with being smart. And that's ok - good even, in the right context. But there's a whole subsection of our industry that has adopted a slightly worse interpretation of that approach wherein it's not enough to be smart, we have to be the Smartest Person In The Room.<br><br>But if you think back to all of the Smart People In The Room that you've ever had to work with, unless they've made the realisation, I expect you'll also, as I do, remember them as smart and angry.<br><br>Because they've done the research. They've put the work in. They're smart and they're right.<br><br>What's left to do?<br><br>Frustratingly, from that point of view, that's only the beginning.<br><br>Everything that you want to achieve hinges on your ability to convince other human beings of your point of view. To trade positions with them so that you each compromise what's happening in the right context so that you can get what you need and they can get what they need.<br><br>It's really obvious when written down or said out loud. But remains elusive to InfoSec professionals to this day, in my experience.<br><br>What is all too easy to forget is that we're the tail, not the dog. Most businesses don't exist to do Perfect Security, if there were such a thing. Given infinite resources and infinite time I'm sure we could endlessly iterate on what we're designing and saying such that it improves, but in the meantime we've got a requirement to make money. And InfoSec doesn't make money.<br><br>And herein lies the rub. How to get your own way in InfoSec relies on a simple economic truth: is is cheaper to do what I say, or is it more expensive?<br><br>And if you fall on the wrong side of that then you're almost never going to get your own way.<br><br>So how exactly do you make a non-revenue generating business area like InfoSec not cost money to get its own way?<br><br>This is where I revealed my final subterfuge for the DC151 crowd - not only was this a boring management talk, this was _also_ and boring Security Architecture call!<br><br>We weaponised compliance and used it in what I like to refer to as \"selective relieving of friction\" - we introduced a very stripped down version of a very old idea - patterns - and made them work for our audience.<br><br>The top part of the document tells an engineer what tech and processes can be used to solve a known problem with a given context. Let's say \"Authentication\", as an example. It explains (pictorally and in text) what the solution needs to basically look like, what technology and processes are acceptable in its implementation, and what trade-offs need to be considered.<br><br>All good. Pretty standard.<br><br>But the coup de grâce is the second page. That's where we pre-assess (and therefore effectively pre-approve) our pattern against the relevant Compliance Standards that are in place across our business.<br><br>And since Compliance is a local issue, it boils down to this:<br><br>\"Do it our way, and it's free. Do it your own way and dealing with compliance is your problem\"<br><br>We've tipped the balance of the scales in terms of cost. It's a _known_ cost to implement this pattern since it's just tech. If you build it yourself then not only do you have to come up with a solution you also need to go to the trouble of checking it's compliant.<br><br>All of a sudden, solving problems in the way we've selected becomes _economically viable_ compared to the other options.<br><br>So we achieve the double whammy - we're smart, and right, but we're also helpful and cheaper.<br><br>Win/win.</p>",
            "image": "https://madsky.github.io/media/posts/2/being-right.jpeg",
            "author": {
                "name": "Leigh"
            },
            "tags": [
                   "Tech",
                   "Public Talk",
                   "DC151"
            ],
            "date_published": "2021-09-12T18:00:00+01:00",
            "date_modified": "2022-07-04T23:32:10+01:00"
        }
    ]
}
